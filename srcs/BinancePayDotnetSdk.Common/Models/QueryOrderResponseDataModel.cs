using System;
using System.Text.Json.Serialization;
using BinancePayDotnetSdk.Common.Converters;
using BinancePayDotnetSdk.Common.Enums;

namespace BinancePayDotnetSdk.Common.Models
{
    /// <summary>
    /// https://developers.binance.com/docs/binance-pay/api-order-query#ayerinfo-data
    /// </summary>
    public class QueryOrderResponseDataModel
    {
        /// <summary>
        /// The merchant account id, issued when merchant been created at Binance.
        /// </summary>
        [JsonPropertyName("merchantId")]
        public long MerchantId { get; init; }
        
        /// <summary>
        /// Unique id generated by binance.
        /// Letter or digit, no other symbol allowed.
        /// </summary>
        [JsonPropertyName("prepayId")]
        public string PrepayId { get; init; }
        
        /// <summary>
        /// Issued once the payment is successful.
        /// </summary>
        [JsonPropertyName("transactionId")]
        public string TransactionId { get; init; }
        
        /// <summary>
        /// The order id, Unique identifier for the request.
        /// Letter or digit, no other symbol allowed.
        /// </summary>
        [JsonPropertyName("merchantTradeNo")]
        public string MerchantTradeNo { get; init; }
        
        /// <summary>
        /// Operate entrance.
        /// </summary>
        [JsonPropertyName("tradeType")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public TradeType TradeType { get; init; }
        
        /// <summary>
        /// Order status.
        /// </summary>
        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public OrderStatus Status { get; init; }
        
        /// <summary>
        /// Order currency.
        /// </summary>
        [JsonPropertyName("currency")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public CurrencyType Currency { get; init; }
        
        /// <summary>
        /// Order amount.
        /// </summary>
        [JsonPropertyName("totalFee")]
        [JsonConverter(typeof(JsonStringDoubleConverter))]
        public double TotalFee { get; init; }
        
        /// <summary>
        /// Product name.
        /// </summary>
        [JsonPropertyName("productName")]
        public string ProductName { get; init; }
        
        /// <summary>
        /// Product detail.
        /// </summary>
        [JsonPropertyName("productDetail")]
        public string ProductDetail { get; init; }
        
        /// <summary>
        /// Consumer unique id.
        /// </summary>
        [JsonPropertyName("openUserId")]
        public string OpenUserId { get; init; }
        
        /// <summary>
        /// Timestamp when transaction happened.
        /// </summary>
        [JsonPropertyName("transactTime")]
        [JsonConverter(typeof(JsonMillisecondsDateTimeOffsetConverter))]
        public DateTimeOffset TransactTime { get; init; }
        
        /// <summary>
        /// Timestamp when order was created.
        /// </summary>
        [JsonPropertyName("createTime")]
        [JsonConverter(typeof(JsonMillisecondsDateTimeOffsetConverter))]
        public DateTimeOffset CreateTime { get; init; }
        
        /// <summary>
        /// only merchant got approved by Binance Operation's approval will receive this payerInfo.
        /// </summary>
        [JsonPropertyName("payerInfo")]
        public PayerInfo PayerInfo { get; init; }

    }

    public class PayerInfo
    {
        /// <summary>
        /// First name.
        /// </summary>
        [JsonPropertyName("firstName")] 
        public string FirstName { get; init; }
        
        /// <summary>
        /// Middle name.
        /// </summary>
        [JsonPropertyName("middleName")] 
        public string MiddleName { get; init; }
        
        /// <summary>
        /// Last name.
        /// </summary>
        [JsonPropertyName("lastName")]
        public string LastName { get; init; }
        
        /// <summary>
        /// Wallet id
        /// </summary>
        [JsonPropertyName("walletId")] 
        public string WalletId { get; init; }
        
        /// <summary>
        /// Residential country.
        /// </summary>
        [JsonPropertyName("country")] 
        public string Country { get; init; }
        
        /// <summary>
        /// Residential city.
        /// </summary>
        [JsonPropertyName("city")] 
        public string City { get; init; }
        
        /// <summary>
        /// Residential address.
        /// </summary>
        [JsonPropertyName("address")] 
        public string Address { get; init; }
        
        /// <summary>
        /// Identity type.
        /// </summary>
        [JsonPropertyName("identityType")] 
        public string IdentityType { get; init; }
        
        /// <summary>
        /// Identify number.
        /// </summary>
        [JsonPropertyName("identityNumber")] 
        public string IdentityNumber { get; init; }
        
        /// <summary>
        /// Date of birth.
        /// </summary>
        [JsonPropertyName("dateOfBirth")] 
        public string DateOfBirth { get; init; }
        
        /// <summary>
        /// Original place of birth.
        /// </summary>
        [JsonPropertyName("placeOfBirth")] 
        public string PlaceOfBirth { get; init; }
        
        /// <summary>
        /// Payer nationality.
        /// </summary>
        [JsonPropertyName("nationality")] 
        public string Nationality { get; init; }
    }
}